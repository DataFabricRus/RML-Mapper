package be.ugent.mmlab.rml.model;

import be.ugent.mmlab.rml.model.RDFTerm.SubjectMap;

import java.util.Set;

/**
 * ************************************************************************
 * <p>
 * RML - Model : TriplesMap Interface
 * <p>
 * A Triples Map summarizes the Mapping Definitions for translating each
 * iteration of a Logical Source to zero or more RDF triples.
 *
 * @author mielvandersande, andimou
 * <p>
 * *************************************************************************
 */
public interface TriplesMap {

    /**
     * A Triples Map must have exactly one Logical Source.
     *
     * @return LogicalSource
     */
    LogicalSource getLogicalSource();

    /**
     * @param logicalSource
     */
    void setLogicalSource(LogicalSource logicalSource);

    /**
     * A Triples Map must have exactly one Subject Map.
     *
     * @return SubjectMap
     */
    SubjectMap getSubjectMap();

    /**
     * @param subjectMap
     */
    void setSubjectMap(SubjectMap subjectMap);

    /**
     * A Triples Map may have zero or more Predicate Object Maps
     * Each specifies a predicate-object pair that,
     * together with the subject generated by the Subject Map,
     * form the RDF triples for each Iteration.
     *
     * @return Set <PredicateObjectMap>
     */
    Set<PredicateObjectMap> getPredicateObjectMaps();

    /**
     * @param predicateObjectMap
     */
    void setPredicateObjectMap(PredicateObjectMap predicateObjectMap);

    /**
     * The Triples Map name.
     */
    String getName();

    /**
     * @return
     */
    String getShortName();

    /**
     * @param name
     */
    void setName(String name);


    /**
     * Get dcterms:type from predicate object map
     */
    String getDCTermsType();

    /**
     * Set dcterms:type in a predicate object map
     *
     * @param dcTermsType
     */
    void setDCTermsType(String dcTermsType);

}
